[
    
    {
        "tool_name": "query_stock",
        "tool_description": "This API queries the stock price of a given stock code and date.",
        "arguments": [
            {
                "name": "stock_code",
                "type": "string",
                "description": "The stock code of the given stock."
            },
            {
                "name": "date",
                "type": "string",
                "description": "The date of the stock price.Format: %Y-%m-%d."
            }
        ],
        "summary": "The \"query_stock\" API is designed for querying the historical stock price of a given stock code on a specific date. Users can provide the stock code and the desired date in the format %Y-%m-%d as input parameters. The API will then retrieve and return the stock price information for the specified stock code and date, allowing users to access historical stock price data for analysis, tracking, or informational purposes."
    },
    {
        "tool_name": "emergency_knowledge",
        "tool_description": "This API searches for a given symptom for emergency knowledge.",
        "arguments": [
            {
                "name": "symptom",
                "type": "string",
                "description": "The symptom to search."
            }
        ],
        "summary": "The \"emergency_knowledge\" API is designed to search for information related to a specific symptom in the context of emergency situations. Users can provide a symptom as input, and the API will search for relevant emergency knowledge or information related to that symptom. This tool can be valuable in applications or systems where quick access to emergency medical or health-related information is essential for providing assistance or guidance during emergency situations."
    },
    {
        "tool_name": "delete_alarm",
        "tool_description": "The API for removing an alarm includes a parameter for the time.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for alarm. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"delete_alarm\" API allows users to remove an alarm by providing the user's token and the time at which the alarm is set. The time should be in the format \"%Y-%m-%d %H:%M:%S.\" This API is typically used in applications where users can set alarms or reminders, and it allows them to delete specific alarms they no longer need."
    },
    {
        "tool_name": "register_user",
        "tool_description": "The API for registering a account, given the username, password and email.",
        "arguments": [
            {
                "name": "username",
                "type": "string",
                "description": "The username of the user."
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password of the user."
            },
            {
                "name": "email",
                "type": "string",
                "description": "The email of the user."
            }
        ],
        "summary": "The \"register_user\" API allows users to register an account by providing their username, password, and email as arguments. This tool is used for creating user accounts within a system or application. Users must provide a unique username, a secure password, and a valid email address to successfully register. This API is typically used as part of a user registration process in web or mobile applications."
    },
    {
        "tool_name": "play_music",
        "tool_description": "This API triggers a music player to play music.",
        "arguments": [
            {
                "name": "music_name",
                "type": "string",
                "description": "The name of the music to play."
            }
        ],
        "summary": "The \"play_music\" API is designed to trigger a music player to play a specific music track. Users can provide the name of the music they want to play as an argument, and the API will initiate the playback of the specified music. This tool is useful for integrating music playback functionality into applications or systems that involve audio entertainment."
    },
    {
        "tool_name": "check_token",
        "tool_description": "Check the user token.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "The token of the user."
            }
        ],
        "summary": "The \"check_token\" API allows users to verify the validity of a user token. Users can provide their token as an argument, and the API will check if the token is valid and return a response indicating its status. This tool is essential for ensuring the security and authentication of users accessing various services or functionalities within an application."
    },
    {
        "tool_name": "query_meeting",
        "tool_description": "The API for retrieving the meeting details from the user's calendar.",
        "arguments": [
            {
                "name": "user_name",
                "type": "string",
                "description": "Name of the user."
            }
        ],
        "summary": "The \"query_meeting\" API is designed to retrieve meeting details from a user's calendar. Users can specify their name as an argument to access information about their scheduled meetings, including meeting topics, start times, end times, locations, and attendees. This tool is useful for users to efficiently manage and access their meeting schedules."
    },
    {
        "tool_name": "query_scene",
        "tool_description": "This API queries a scene of smart home system, given the scene name",
        "arguments": [
            {
                "name": "name",
                "type": "string",
                "description": "The name of the scene."
            }
        ],
        "summary": "The \"query_scene\" API allows users to query a scene in a smart home system by providing the name of the scene as an argument. This tool helps users retrieve information about specific scenes configured in their smart home setup, facilitating control and management of various smart devices within those scenes."
    },
    {
        "tool_name": "translate",
        "tool_description": "Translate the text to the target language.",
        "arguments": [
            {
                "name": "src",
                "type": "string",
                "description": "The text to be translated."
            },
            {
                "name": "src_lang",
                "type": "string",
                "description": "[Optional] The source language to translate from. Default is auto."
            },
            {
                "name": "tgt_lang",
                "type": "string",
                "description": "[Optional] The target language to translate to. Default is english/en."
            }
        ],
        "summary": "The \"translate\" API allows users to translate text to a target language. It accepts three main arguments: \"src\" for the text to be translated, \"src_lang\" (optional) to specify the source language to translate from (default is auto-detection), and \"tgt_lang\" (optional) to indicate the target language to translate to (default is English). This tool is useful for multilingual communication and content localization, enabling users to easily translate text between languages."
    },
    {
        "tool_name": "timed_switch",
        "tool_description": "This API for setting a timed switch for a smart device.",
        "arguments": [
            {
                "name": "name",
                "type": "string",
                "description": "The name of the smart device."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time to switch the device on or off. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "on",
                "type": "boolean",
                "description": "Whether to switch the device on or off."
            }
        ],
        "summary": "The \"timed_switch\" API enables users to set a timed switch for a smart device. It accepts three essential arguments: \"name\" to specify the name of the smart device, \"time\" to indicate the time at which the device should be switched on or off in the format %Y-%m-%d %H:%M:%S, and \"on\" which is a boolean value determining whether to turn the device on or off at the specified time. This tool is useful for automating device operations based on scheduled timings, enhancing home automation, and improving energy efficiency by controlling smart devices at specific times."
    },
    {
        "tool_name": "appointment_registration",
        "tool_description": "This API registers an appointment of hospital.",
        "arguments": [
            {
                "name": "patient_name",
                "type": "string",
                "description": "The name of patient."
            },
            {
                "name": "date",
                "type": "string",
                "description": "The date of appointment. Format be like %Y-%m-%d"
            },
            {
                "name": "doctor_name",
                "type": "string",
                "description": "The name of appointed doctor."
            }
        ],
        "summary": "The \"appointment_registration\" API allows users to register appointments at a hospital. It requires three essential arguments: \"patient_name\" for specifying the patient's name, \"date\" to indicate the desired appointment date in the format %Y-%m-%d, and \"doctor_name\" to specify the name of the doctor with whom the appointment is scheduled. This tool is valuable for efficiently managing and organizing hospital appointments, enabling patients to book consultations with their preferred doctors on specific dates, and enhancing the overall healthcare scheduling process."
    },
    {
        "tool_name": "addalarm",
        "tool_description": "The API for setting an alarm includes a parameter for the alarm time.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for alarm. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"addalarm\" API is designed for setting an alarm and includes two parameters: \"token,\" which represents the user's token for authentication, and \"time,\" which specifies the time for the alarm to be set. The time should be provided in the format %Y-%m-%d %H:%M:%S. This API allows users to schedule alarms, helping them manage their daily routines or reminders effectively."
    },
    {
        "tool_name": "query_alarm",
        "tool_description": "The API for querying alarm clock, help user to check the alarm clock they have set.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for alarm. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"query_alarm\" API is designed to help users check the alarm clocks they have set. It takes two arguments: \"token,\" which represents the user's token for authentication, and \"time,\" which is the specific time for the alarm being queried. The time should be provided in the format %Y-%m-%d %H:%M:%S. This API allows users to retrieve information about their scheduled alarms, ensuring they have a convenient way to manage their alarm settings."
    },
    {
        "tool_name": "add_scene",
        "tool_description": "This API adds a scene of smart home system, given the scene name and a list of smart devices",
        "arguments": [
            {
                "name": "name",
                "type": "string",
                "description": "The name of the scene."
            },
            {
                "name": "devices",
                "type": "list",
                "description": "The list of smart devices"
            }
        ],
        "summary": "The \"add_scene\" API is used for adding a scene to a smart home system. It requires two arguments: \"name,\" which is the name of the scene, and \"devices,\" which is a list of smart devices associated with the scene. This API allows users to create and define customized scenes in their smart home setup, specifying which smart devices should be controlled together as part of the scene. Scenes are commonly used for automating routines or controlling multiple devices simultaneously within a smart home environment."
    },
    {
        "tool_name": "image_caption",
        "tool_description": "This API generates a caption for a given image.",
        "arguments": [
            {
                "name": "url",
                "type": "string",
                "description": "The url to download the image. It should end with .jpg"
            }
        ],
        "summary": "The \"image_caption\" API is used for generating captions for images. It accepts one argument, which is the URL to download the image, and the image file should be in the .jpg format. This API is designed to provide descriptive text or captions for images, making it useful for applications such as image indexing, accessibility for visually impaired individuals, and enhancing image understanding and search capabilities."
    },
    {
        "tool_name": "speech_recognition",
        "tool_description": "This API recognizes the speech from a given audio url.",
        "arguments": [
            {
                "name": "url",
                "type": "string",
                "description": "The url to download the audio. It should end with .wav."
            }
        ],
        "summary": "The \"speech_recognition\" API is designed for speech recognition. It takes one argument, which is the URL to download the audio from, and the audio file should be in the .wav format. This API is used to transcribe spoken language into written text and can be valuable for various applications, including voice assistants, transcription services, and more, enabling the conversion of audio content into readable and searchable text."
    },
    {
        "tool_name": "delete_agenda",
        "tool_description": "The API for deleting a schedule item includes parameters for token, content, time, and location.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the agenda."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for agenda. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "location",
                "type": "string",
                "description": "The location of the agenda."
            }
        ],
        "summary": "The \"delete_agenda\" API is a tool designed for deleting a schedule item. It requires several arguments to perform this action, including the user's token (\"token\"), the content of the agenda item to be deleted (\"content\"), the time of the agenda item (\"time\") in the format \"%Y-%m-%d %H:%M:%S,\" and the location of the agenda item (\"location\"). Users can utilize this API to remove specific agenda entries from their schedules, making it a useful feature for managing and organizing personal or professional appointments and events."
    },
    {
        "tool_name": "symptomsearch",
        "tool_description": "This API searches for a given symptom.",
        "arguments": [
            {
                "name": "symptom",
                "type": "string",
                "description": "The symptom to search."
            }
        ],
        "summary": "The \"symptomsearch\" API is a tool designed for searching for a specific symptom. It accepts a single argument, \"symptom,\" which should be a string representing the symptom to be searched for. This tool can be valuable in various healthcare or medical applications where users need to find information related to specific symptoms to better understand potential health conditions or seek appropriate medical advice."
    },
    {
        "tool_name": "delete_scene",
        "tool_description": "This API deletes a scene by its name.",
        "arguments": [
            {
                "name": "name",
                "type": "string",
                "description": "The name of the scene."
            }
        ],
        "summary": "The \"delete_scene\" API is a tool that allows for the deletion of a scene based on its name. It accepts a single argument, \"name,\" which should be a string representing the name of the scene to be deleted. This tool can be useful in applications or systems where scene management or removal is necessary, providing a straightforward way to delete scenes by their designated names."
    },
    {
        "tool_name": "search_engine",
        "tool_description": "This API searches for a given keyword for search engine.",
        "arguments": [
            {
                "name": "keyword",
                "type": "string",
                "description": "The keyword to search."
            }
        ],
        "summary": "The \"search_engine\" API is a tool designed for conducting keyword-based searches on a search engine. It accepts a single argument, \"keyword,\" which is a string representing the search query. This tool can be integrated into applications or services to perform searches and retrieve relevant results based on the provided keyword, making it a valuable resource for implementing search functionality."
    },
    {
        "tool_name": "document_q_a",
        "tool_description": "This API answers the question from a given document url.",
        "arguments": [
            {
                "name": "url",
                "type": "string",
                "description": "The url to download the document. It should end with .txt."
            },
            {
                "name": "question",
                "type": "string",
                "description": "The question to be answered."
            }
        ],
        "summary": "The \"document_q_a\" API is designed to answer questions based on the content of a specified document. It takes two essential arguments: \"url,\" which should provide the URL to download the document (expected to be in .txt format), and \"question,\" which contains the query to be answered based on the document's content. This tool is particularly useful for automating the retrieval of information from documents and generating responses to specific questions related to the document's content."
    },
    {
        "tool_name": "query_balance",
        "tool_description": "This API queries the balance of a given user.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "The token of the user."
            }
        ],
        "summary": "The \"query_balance\" API is designed for querying the balance of a specific user. It takes a single argument, which is the user's token. This tool allows users to retrieve information about their account balance, providing a convenient way to check their financial status or account balance in a system or application."
    },
    {
        "tool_name": "record_health_data",
        "tool_description": "This API records the health data of a user.",
        "arguments": [
            {
                "name": "user_id",
                "type": "string",
                "description": "The ID of user."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time of health data. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "health_data",
                "type": "list",
                "description": "The health data"
            }
        ],
        "summary": "The \"record_health_data\" API allows users to record their health data, including user ID, the timestamp of the health data entry in the format \"%Y-%m-%d %H:%M:%S,\" and a list of health data entries. This tool is designed to help users keep track of their health-related information, providing a convenient way to store and manage their health records over time."
    },
    {
        "tool_name": "open_bank_account",
        "tool_description": "This is an API for opening a bank account for a user, given the account, password and name.",
        "arguments": [
            {
                "name": "account",
                "type": "string",
                "description": "The account for the user."
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password."
            },
            {
                "name": "name",
                "type": "string",
                "description": "account holder name."
            }
        ],
        "summary": "The \"open_bank_account\" API allows users to open a bank account by providing the account number, password, and the name of the account holder. This tool is designed to facilitate the process of creating new bank accounts for users, helping them manage their financial transactions and accounts with ease."
    },
    {
        "tool_name": "query_registration",
        "tool_description": "This API queries the registration of a patient, given patient ID.",
        "arguments": [
            {
                "name": "patient_name",
                "type": "string",
                "description": "The name of patient."
            },
            {
                "name": "date",
                "type": "string",
                "description": "The date of appointment. Format be like %Y-%m-%d"
            }
        ],
        "summary": "The \"query_registration\" API allows users to query the registration of a patient by providing the patient's name and the date of the appointment (in the format: %Y-%m-%d). This tool is useful for retrieving information about a patient's appointments on a specific date, helping healthcare providers manage their patient records more effectively."
    },
    {
        "tool_name": "modify_reminder",
        "tool_description": "The API for deleting a reminder item includes content and time.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the conference."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for conference. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"modify_reminder\" API allows users to modify a reminder item by providing their user token, the content of the reminder, and the new time for the reminder (in the format: %Y-%m-%d %H:%M:%S). This tool provides the capability to update the timing of a reminder, ensuring users can manage their schedules effectively by making necessary adjustments to their reminders."
    },
    {
        "tool_name": "modify_registration",
        "tool_description": "This API modifies the registration of a patient given appointment ID.",
        "arguments": [
            {
                "name": "appointment_id",
                "type": "string",
                "description": "The ID of appointment."
            },
            {
                "name": "new_appointment_date",
                "type": "string",
                "description": "The new appointment date. Format: %Y-%m-%d"
            },
            {
                "name": "new_appointment_doctor",
                "type": "string",
                "description": "The new appointment doctor."
            }
        ],
        "summary": "The \"modify_registration\" API allows users to modify the registration of a patient by providing the appointment ID along with new appointment date (in the format: %Y-%m-%d) and the new appointment doctor. This tool facilitates changes to patient appointments, updating crucial information such as the appointment date and doctor, ensuring flexibility in managing healthcare appointments."
    },
    {
        "tool_name": "add_meeting",
        "tool_description": "This API allows users to make a reservation for a meeting and store the meeting information in the database. \\Function\uff1a \\Allow users to make a reservation for a meeting. \\Exception Handling\uff1a \\1. If the reservation is successful, return a success message. \\2. If the reservation fails, return a corresponding error message.",
        "arguments": [
            {
                "name": "meeting_topic",
                "type": "string",
                "description": "The title of the meeting"
            },
            {
                "name": "start_time",
                "type": "string",
                "description": "The start time of the meeting, in the pattern of %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "end_time",
                "type": "string",
                "description": "The end time of the meeting, in the pattern of %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "location",
                "type": "string",
                "description": "The location where the meeting to be held, no more than 100 characters."
            },
            {
                "name": "attendees",
                "type": "list of strings",
                "description": "The attendees of the meeting, including names, positions and other information."
            }
        ],
        "summary": "The \"add_meeting\" API allows users to make reservations for meetings and stores the meeting information in the database. It accepts several parameters, including the meeting topic (title), start time, end time, location (limited to 100 characters), and a list of attendees with their names, positions, and other information. The API handles exceptions by returning a success message upon successful reservation and corresponding error messages if the reservation process fails. This tool is useful for managing and organizing meetings, ensuring that relevant details are stored and accessible."
    },
    {
        "tool_name": "forgot_password",
        "tool_description": "Sends an email to the user with a link to reset the password. Need call twice, first with \\'Forgot Password\\' status to get the verification code, then call again with \\'Verification Code\\' status to change the password. Must pass the name of the parameters when calling the API, like ForgotPassword(status=\\'Forgot Password\\', username=\\'username\\').",
        "arguments": [
            {
                "name": "status",
                "type": "string",
                "description": "'Forgot Password' for first call"
            },
            {
                "name": "username",
                "type": "string",
                "description": "The username of the user. Only needed for the first call."
            },
            {
                "name": "email",
                "type": "string",
                "description": "The email of the user. Only needed for the first call."
            },
            {
                "name": "verification_code",
                "type": "integer",
                "description": "The verification code sent to the user. Only needed for the second call."
            },
            {
                "name": "new_password",
                "type": "string",
                "description": "The new password of the user. Only needed for the second call."
            }
        ],
        "summary": "The \"forgot_password\" tool is a versatile API designed for managing user password resets. It involves a two-step process. In the first call with the status set to 'Forgot Password,' users need to provide their username and email. This initiates the password reset process and generates a verification code. In the second call with the status set to 'Verification Code,' users provide the verification code and the new password. This step confirms the user's identity and allows them to set a new password. This tool is useful for enhancing the security of user accounts by enabling password recovery through email verification and code-based authentication."
    },
    {
        "tool_name": "cancel_registration",
        "tool_description": "This API cancels the registration of a patient given appointment ID.",
        "arguments": [
            {
                "name": "appointment_id",
                "type": "string",
                "description": "The ID of appointment."
            }
        ],
        "summary": "The \"cancel_registration\" tool is an API designed to cancel the registration of a patient for a medical appointment. Users need to provide the \"appointment_id,\" which is the unique identifier of the appointment to be canceled. This tool is particularly useful for healthcare systems and medical facilities to manage and handle appointment cancellations efficiently, ensuring that the scheduling process remains organized and up-to-date."
    },
    {
        "tool_name": "query_agenda",
        "tool_description": "The API for getting a schedule item includes parameters for token, content, time, and location.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the agenda."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for agenda. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "location",
                "type": "string",
                "description": "The location of the agenda."
            }
        ],
        "summary": "The \"query_agenda\" tool is an API that allows users to retrieve schedule items by providing specific parameters. Users need to provide their \"token\" for authentication, and they can query schedule items based on \"content,\" \"time\" (in the format \"%Y-%m-%d %H:%M:%S\"), and \"location.\" This tool enables users to search for and retrieve schedule items that match their specified criteria, making it useful for managing and accessing agenda-related information efficiently."
    },
    {
        "tool_name": "cancel_timed_switch",
        "tool_description": "Cancels a timed switch for a smart device.",
        "arguments": [
            {
                "name": "name",
                "type": "string",
                "description": "The name of the smart device."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time to switch the device on or off. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"cancel_timed_switch\" tool is an API designed for managing timed switches of smart devices. Users can cancel a scheduled timed switch using this tool by specifying the \"name\" of the smart device for which they want to cancel the timed switch and providing the \"time\" in the format \"%Y-%m-%d %H:%M:%S\" when the device was scheduled to be switched on or off. This API enables users to efficiently control and modify the scheduling of their smart devices, ensuring they operate as desired."
    },
    {
        "tool_name": "book_hotel",
        "tool_description": "This API orders a hotel room. Two rooms are ordered if the number of adults is greater than 2. Only one order can be made at same time.",
        "arguments": [
            {
                "name": "hotel_name",
                "type": "string",
                "description": "The name of the hotel."
            },
            {
                "name": "check_in_time",
                "type": "string",
                "description": "The time to check in. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "check_out_time",
                "type": "string",
                "description": "The time to check out. Format %Y-%m-%d %H:%M:%S:"
            },
            {
                "name": "room_count",
                "type": "integer",
                "description": "The number of rooms to order."
            },
            {
                "name": "adult_count",
                "type": "integer",
                "description": "The number of adults."
            },
            {
                "name": "child_count",
                "type": "integer",
                "description": "The number of children."
            }
        ],
        "summary": "The \"book_hotel\" tool is an API designed to facilitate hotel room bookings. Users can provide specific details to make a hotel reservation. It accepts arguments including the \"hotel_name\" for specifying the hotel, \"check_in_time\" and \"check_out_time\" to set the check-in and check-out times in the format \"%Y-%m-%d %H:%M:%S,\" \"room_count\" to determine the number of rooms to be booked, \"adult_count\" to indicate the number of adults, and \"child_count\" to specify the number of children. Notably, if the \"adult_count\" exceeds 2, two rooms will be ordered to accommodate the guests. It's important to note that only one hotel booking can be made at a time using this API."
    },
    {
        "tool_name": "calculator",
        "tool_description": "This API provides basic arithmetic operations: addition, subtraction, multiplication, and division.",
        "arguments": [
            {
                "name": "formula",
                "type": "string",
                "description": "The formula that needs to be calculated. Only integers are supported. Valid operators are +"
            }
        ],
        "summary": "The \"calculator\" tool is an API that offers basic arithmetic operations, including addition, subtraction, multiplication, and division. Users can provide a mathematical formula in the form of a string, using only integers and the \"+\" operator. This tool then calculates the result of the specified mathematical operation and returns the outcome. It provides a convenient way to perform fundamental mathematical calculations programmatically, making it useful in various applications that require mathematical computations."
    },
    {
        "tool_name": "query_history_today",
        "tool_description": "This API queries the history of the given date.",
        "arguments": [
            {
                "name": "date",
                "type": "string",
                "description": "The date of the history. Format: %Y-%m-%d"
            }
        ],
        "summary": "The \"query_history_today\" tool is an API that allows users to query historical information for a specific date provided in the format \"%Y-%m-%d.\" Users can retrieve historical data related to events, records, or other information relevant to the specified date. This tool provides a means to access historical records and data for analysis or reference, enhancing the ability to explore past events and activities on a specific date."
    },
    {
        "tool_name": "delete_meeting",
        "tool_description": "This API allows users to delete a reservation for a meeting and remove the meeting information in the database.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "meeting_topic",
                "type": "string",
                "description": "The title of the meeting"
            },
            {
                "name": "start_time",
                "type": "string",
                "description": "The start time of the meeting, in the pattern of %Y-%m-%d %H"
            },
            {
                "name": "end_time",
                "type": "string",
                "description": "The end time of the meeting, in the pattern of %Y-%m-%d %H"
            },
            {
                "name": "location",
                "type": "string",
                "description": "The location where the meeting to be held, no more than 100 characters."
            },
            {
                "name": "attendees",
                "type": "list of strings",
                "description": "The attendees of the meeting, including names, positions and other information."
            }
        ],
        "summary": "The \"delete_meeting\" tool is an API designed for users to delete scheduled meetings and remove corresponding meeting details from the database. Users must provide their authentication token, the title of the meeting to be deleted, its start and end times in the format \"%Y-%m-%d %H,\" the meeting's location (limited to 100 characters), and a list of attendees with their names, positions, and other relevant information. This tool facilitates the management of scheduled meetings by allowing users to cancel or remove them from the system, ensuring efficient meeting scheduling and organization."
    },
    {
        "tool_name": "get_today",
        "tool_description": "This API gets the current date.",
        "arguments": [],
        "summary": "The \"get_today\" tool is an API designed to retrieve the current date. It does not require any input arguments and simply provides the current date when invoked. This tool is useful for applications and systems that need to access the current date for various purposes, such as timestamping, scheduling, or date-related calculations."
    },
    {
        "tool_name": "modifymeeting",
        "tool_description": "This API allows users to modify a reservation for a meeting",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "meeting_topic",
                "type": "string",
                "description": "The title of the meeting"
            },
            {
                "name": "start_time",
                "type": "string",
                "description": "The start time of the meeting, in the pattern of %Y-%m-%d %H"
            },
            {
                "name": "end_time",
                "type": "string",
                "description": "The end time of the meeting, in the pattern of %Y-%m-%d %H"
            },
            {
                "name": "location",
                "type": "string",
                "description": "The location where the meeting to be held, no more than 100 characters."
            },
            {
                "name": "attendees",
                "type": "list of strings",
                "description": "The attendees of the meeting, including names, positions and other information."
            }
        ],
        "summary": "The \"modifymeeting\" tool is an API that enables users to modify a reservation for a meeting. It accepts several input parameters, including \"token,\" which is a string representing the user's token for authentication, \"meeting_topic,\" specifying the title of the meeting to be modified, \"start_time,\" indicating the new start time of the meeting in the format %Y-%m-%d %H, \"end_time,\" representing the new end time of the meeting in the same format, \"location,\" specifying the new location where the meeting will be held (limited to 100 characters), and \"attendees,\" which is a list of strings containing information about the attendees, including names, positions, and other details. This tool allows users to make changes to their meeting reservations, ensuring accurate and up-to-date scheduling."
    },
    {
        "tool_name": "delete_reminder",
        "tool_description": "The API for deleting a reminder item includes content and time.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the conference."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for conference. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"delete_reminder\" tool is an API designed for deleting a reminder item based on its content and time. It accepts three input parameters: \"token,\" which is a string representing the user's token for authentication, \"content,\" specifying the content of the reminder item to be deleted, and \"time,\" indicating the time for the reminder item in the format %Y-%m-%d %H:%M:%S. This tool allows users to remove specific reminders from their lists, providing a way to manage their reminders effectively and keep their schedules up-to-date."
    },
    {
        "tool_name": "modify_agenda",
        "tool_description": "The API for modifying a schedule item includes parameters for content, time, and location.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the agenda."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The new time for agenda. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "location",
                "type": "string",
                "description": "The new location of the agenda."
            }
        ],
        "summary": "The \"modify_agenda\" tool is an API designed for modifying a schedule item, including parameters for content, time, and location. It accepts four input parameters: \"token,\" which is a string representing the user's token for authentication, \"content,\" specifying the content of the agenda item to be modified, \"time,\" indicating the new time for the agenda item in the format %Y-%m-%d %H:%M:%S, and \"location,\" representing the new location for the agenda item. This tool enables users to conveniently update the details of their schedule items, helping them manage their agendas effectively, including content, timing, and location."
    },
    {
        "tool_name": "query_reminder",
        "tool_description": "The API for querying a reminder item includes content and time.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the reminder."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for the reminder. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"query_reminder\" tool is an API designed for querying a reminder item based on content and time criteria. It accepts three input parameters: \"token,\" which is a string representing the user's token for authentication, \"content,\" specifying the content of the reminder to be queried, and \"time,\" indicating the time for the reminder in the format %Y-%m-%d %H:%M:%S. This tool allows users to search for and retrieve specific reminder items that match the provided content and time, helping them manage and review their reminders effectively."
    },
    {
        "tool_name": "modify_alarm",
        "tool_description": "The API for modifying an alarm includes a parameter for the from_time to to_time.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "from_time",
                "type": "string",
                "description": "The time for alarm which changed from. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "to_time",
                "type": "string",
                "description": "The time for alarm which changed to. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"modify_alarm\" tool is an API designed for modifying an alarm by specifying the changes in the alarm's timing. It accepts three input parameters: \"token,\" which is a string representing the user's token for authentication, \"from_time,\" indicating the original time for the alarm in the format %Y-%m-%d %H:%M:%S, and \"to_time,\" specifying the new time for the alarm in the same format. This tool allows users to conveniently update the timing of their alarms, ensuring that they receive notifications at the desired times."
    },
    {
        "tool_name": "add_reminder",
        "tool_description": "The API for adding a reminder item includes content and time.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the conference."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for conference. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"add_reminder\" tool is an API designed for adding a reminder item, including content and time details. It accepts three input parameters: \"token,\" which is a string representing the user's token for authentication, \"content,\" specifying the content of the reminder, and \"time,\" indicating the time for the reminder in the format %Y-%m-%d %H:%M:%S. This tool allows users to conveniently create and manage reminder items, helping them stay organized and on top of their schedules."
    },
    {
        "tool_name": "dictionary",
        "tool_description": "This API searches the dictionary for a given keyword.",
        "arguments": [
            {
                "name": "keyword",
                "type": "string",
                "description": "The keyword to search."
            }
        ],
        "summary": "The \"dictionary\" tool is an API designed for searching a dictionary for a specified keyword. It accepts one input parameter, \"keyword,\" which is a string representing the keyword to be searched. This tool provides a convenient way to access dictionary definitions, meanings, and explanations related to the specified keyword, facilitating language reference and understanding."
    },
    {
        "tool_name": "send_email",
        "tool_description": "This API for sending email, given the receiver, subject and content.",
        "arguments": [
            {
                "name": "receiver",
                "type": "string",
                "description": "The receiver address of the email."
            },
            {
                "name": "subject",
                "type": "string",
                "description": "The subject address of the email."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the email."
            }
        ],
        "summary": "The \"send_email\" tool is an API designed for sending emails, allowing users to specify the receiver's email address, subject, and content of the email. It accepts three input parameters: \"receiver,\" which is a string representing the receiver's email address, \"subject,\" indicating the subject of the email, and \"content,\" specifying the content of the email. This tool simplifies the process of programmatically sending emails, making it convenient for automated email notifications and communications."
    },
    {
        "tool_name": "query_health_data",
        "tool_description": "This API queries the recorded health data in database of a given user and time span.",
        "arguments": [
            {
                "name": "user_id",
                "type": "string",
                "description": "The user id of the given user. Cases are ignored."
            },
            {
                "name": "start_time",
                "type": "string",
                "description": "The start time of the time span. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "end_time",
                "type": "string",
                "description": "The end time of the time span. Format: %Y-%m-%d %H:%M:%S"
            }
        ],
        "summary": "The \"query_health_data\" tool is an API designed to query recorded health data from a database for a given user within a specified time span. It accepts three input parameters: \"user_id,\" which is a string representing the user ID (with case-insensitivity), \"start_time,\" indicating the start time of the time span in the format %Y-%m-%d %H:%M:%S, and \"end_time,\" specifying the end time of the time span in the same format. This tool enables users to retrieve health-related data recorded for a specific user during a specified time period, facilitating health monitoring and analysis."
    },
    {
        "tool_name": "wiki",
        "tool_description": "This API for searching a keyword in Wikipedia.",
        "arguments": [
            {
                "name": "keyword",
                "type": "string",
                "description": "The keyword to search."
            }
        ],
        "summary": "The \"wiki\" tool is an API designed for searching a keyword within Wikipedia. It accepts one input parameter, \"keyword,\" which is a string representing the keyword to be searched. This tool provides a convenient way to access Wikipedia's extensive knowledge base, allowing users to retrieve information related to the specified keyword or topic from the Wikipedia encyclopedia."
    },
    {
        "tool_name": "get_user_token",
        "tool_description": "Get the user token by username and password.",
        "arguments": [
            {
                "name": "username",
                "type": "string",
                "description": "The username of the user."
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password of the user."
            }
        ],
        "summary": "The \"get_user_token\" tool is designed to retrieve a user's authentication token based on their provided username and password. It accepts two input parameters: \"username,\" which is a string representing the user's username, and \"password,\" which is a string representing the user's password. By supplying these credentials, this tool facilitates user authentication and allows users to obtain the necessary token for accessing protected resources or functionalities within a system or application."
    },
    {
        "tool_name": "addagenda",
        "tool_description": "The API for adding a agenda item includes content, time and location.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "User's token."
            },
            {
                "name": "content",
                "type": "string",
                "description": "The content of the agenda."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for agenda. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "location",
                "type": "string",
                "description": "The location of the agenda."
            }
        ],
        "summary": "The \"addagenda\" tool is an API designed to add an agenda item, including content, time, and location details. It accepts four input parameters: \"token,\" which is a string representing the user's token for authentication, \"content,\" which is a string specifying the content of the agenda item, \"time,\" indicating the time for the agenda in the format %Y-%m-%d %H:%M:%S, and \"location,\" which represents the location of the agenda item. This tool enables users to conveniently create and manage agenda items, helping to organize and plan events or meetings effectively."
    },
    {
        "tool_name": "delete_account",
        "tool_description": "Delete an account.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "The token of the user."
            }
        ],
        "summary": "The \"delete_account\" tool is designed to delete a user account and requires a single input parameter, \"token,\" which is a string representing the user's authentication token. This tool provides a mechanism for users to securely delete their accounts when they no longer wish to maintain an active account within the system or application."
    },
    {
        "tool_name": "organization_members",
        "tool_description": "API to retrieve the list of members in the organization.",
        "arguments": [
            {
                "name": "organization",
                "type": "string",
                "description": "Name of the organization."
            }
        ],
        "summary": "The \"organization_members\" tool is an API designed for retrieving the list of members within a specified organization. It accepts one input parameter, \"organization,\" which is a string representing the name of the organization. By providing the organization's name, this tool allows users to access a comprehensive list of members associated with that particular organization, facilitating effective organization and membership management."
    },
    {
        "tool_name": "travel_status",
        "tool_description": "API for retrieving the current travel status of each member.",
        "arguments": [
            {
                "name": "member_name",
                "type": "string",
                "description": "Name of the member."
            }
        ],
        "summary": "The \"travel_status\" tool is an API designed for retrieving the current travel status of individual members. It accepts one input parameter, \"member_name,\" which is a string representing the name of the member whose travel status is to be retrieved. This tool facilitates tracking and monitoring the travel statuses of different members, providing valuable information for travel planning and coordination within a group or organization."
    },
    {
        "tool_name": "user_movie_preferences",
        "tool_description": "API for retrieving user preferences for movie recommendations.",
        "arguments": [
            {
                "name": "user_name",
                "type": "string",
                "description": "Name of the user."
            }
        ],
        "summary": "The \"user_movie_preferences\" tool is an API designed for retrieving user preferences related to movie recommendations. It accepts a single input parameter, \"user_name,\" which is a string representing the name of the user. By providing the user's name, this tool allows users to access and retrieve their movie preferences, which can be used to provide personalized movie recommendations tailored to the user's tastes and interests."
    },
    {
        "tool_name": "account_info",
        "tool_description": "API for retrieving and updating user account information.",
        "arguments": [
            {
                "name": "username",
                "type": "string",
                "description": "Name of the user."
            },
            {
                "name": "password",
                "type": "string",
                "description": "Password of the user."
            }
        ],
        "summary": "The \"account_info\" tool is an API designed for retrieving and updating user account information. It accepts two input parameters: \"username,\" which is a string representing the name of the user, and \"password,\" which is a string representing the user's password. This tool allows users to access and manage their account details, facilitating user authentication and account-related operations such as password updates and information retrieval."
    },
    {
        "tool_name": "tax_calculator",
        "tool_description": "API for calculating tax deductions based on the given salary.",
        "arguments": [
            {
                "name": "salary",
                "type": "float",
                "description": "The salary to calculate tax deductions for."
            }
        ],
        "summary": "The \"tax_calculator\" tool is an API designed for calculating tax deductions based on a specified salary. It accepts a single input parameter, \"salary,\" which is a float representing the salary for which tax deductions need to be calculated. This tool provides a convenient and automated way to compute tax liabilities, assisting individuals and organizations in estimating tax deductions for various income levels and tax jurisdictions."
    },
    {
        "tool_name": "hotel_availability",
        "tool_description": "API for checking hotel availability based on the destination and travel dates.",
        "arguments": [
            {
                "name": "destination",
                "type": "string",
                "description": "Destination for hotel search."
            },
            {
                "name": "check_in_date",
                "type": "string",
                "description": "Check-in date. Format: %Y-%m-%d"
            },
            {
                "name": "check_out_date",
                "type": "string",
                "description": "Check-out date. Format: %Y-%m-%d"
            }
        ],
        "summary": "The \"hotel_availability\" tool is an API designed for checking hotel availability based on a specified destination and travel dates. It accepts three input parameters: \"destination,\" which represents the destination for the hotel search, \"check_in_date,\" specifying the check-in date in the format %Y-%m-%d, and \"check_out_date,\" indicating the check-out date in the same format. This tool provides a convenient way to inquire about hotel room availability, helping travelers plan their accommodations for specific destinations and travel periods."
    },
    {
        "tool_name": "get_occupation_salary",
        "tool_description": "API for querying the salary of a given occupation.",
        "arguments": [
            {
                "name": "occupation",
                "type": "string",
                "description": "The occupation to query."
            }
        ],
        "summary": "The \"get_occupation_salary\" tool is an API designed for querying the salary associated with a specified occupation. It accepts one input parameter, \"occupation,\" which is a string representing the occupation for which the salary information is sought. This tool provides a convenient way to retrieve salary data for various occupations, offering valuable insights for job seekers, employers, and labor market analysis."
    },
    {
        "tool_name": "geocoding",
        "tool_description": "The API for converting an address or place name to geographical coordinates.",
        "arguments": [
            {
                "name": "address",
                "type": "string",
                "description": "The address or place name to be converted."
            }
        ],
        "summary": "The \"geocoding\" tool is an API designed for converting an address or place name into geographical coordinates. It accepts a single input parameter, \"address,\" which is a string representing the address or place name to be converted. This tool is valuable for obtaining precise latitude and longitude coordinates corresponding to a given location, aiding in location-based services and mapping applications."
    },
    {
        "tool_name": "nearby_restaurants",
        "tool_description": "Retrieves nearby restaurants based on the provided coordinates and search parameters.",
        "arguments": [
            {
                "name": "latitude",
                "type": "float",
                "description": "Latitude of the location."
            },
            {
                "name": "longitude",
                "type": "float",
                "description": "Longitude of the location."
            },
            {
                "name": "distance",
                "type": "integer",
                "description": "The distance in meters from the location to search for restaurants."
            }
        ],
        "summary": "The \"nearby_restaurants\" tool is designed to retrieve a list of nearby restaurants based on provided coordinates and search parameters. It accepts three input parameters: \"latitude\" (representing the latitude of the location), \"longitude\" (representing the longitude of the location), and \"distance\" (indicating the distance in meters from the location to search for restaurants). Using these coordinates and distance criteria, the tool allows users to discover restaurants in close proximity to a specified location, making it convenient for finding dining options nearby."
    },
    {
        "tool_name": "email_reminder",
        "tool_description": "This API sends an email reminder to the user with the meeting details.",
        "arguments": [
            {
                "name": "content",
                "type": "string",
                "description": "The content of the email."
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time for the meeting. Format: %Y-%m-%d %H:%M:%S"
            },
            {
                "name": "location",
                "type": "string",
                "description": "The location of the meeting."
            },
            {
                "name": "recipient",
                "type": "string",
                "description": "The email address of the recipient."
            }
        ],
        "summary": "The \"email_reminder\" tool is an API that facilitates sending email reminders to users, containing meeting details. It accepts four input parameters: \"content,\" which specifies the content of the email reminder, \"time,\" which indicates the time of the meeting in the format %Y-%m-%d %H:%M:%S, \"location,\" which specifies the meeting location, and \"recipient,\" which represents the email address of the recipient. This tool simplifies the process of sending automated email reminders for scheduled meetings, providing users with essential meeting information in a convenient manner."
    },
    {
        "tool_name": "user_watched_movies",
        "tool_description": "API for retrieving a user's watched movie list.",
        "arguments": [
            {
                "name": "user_name",
                "type": "string",
                "description": "Name of the user."
            }
        ],
        "summary": "The \"user_watched_movies\" tool is an API designed to retrieve a list of movies that a specific user has watched. It accepts one input parameter, \"user_name,\" which is a string representing the name of the user. By providing the user's name, the tool allows users to access and retrieve a comprehensive list of movies that the specified user has previously watched, facilitating user-specific movie tracking and recommendations based on viewing history."
    },
    {
        "tool_name": "get_weather_for_coordinates",
        "tool_description": "Retrieves current weather information based on the provided coordinates.",
        "arguments": [
            {
                "name": "latitude",
                "type": "float",
                "description": "Latitude of the location."
            },
            {
                "name": "longitude",
                "type": "float",
                "description": "Longitude of the location."
            }
        ],
        "summary": "The \"get_weather_for_coordinates\" tool is designed to retrieve current weather information for a specified location based on provided latitude and longitude coordinates. It accepts two input parameters: \"latitude,\" which represents the latitude of the location, and \"longitude,\" which represents the longitude of the location. By using these coordinates, the tool provides users with up-to-date weather data for the specified geographical point, enabling them to access accurate and real-time weather conditions for any location of interest."
    },
    {
        "tool_name": "like_count",
        "tool_description": "API to retrieve the number of likes for a given post ID.",
        "arguments": [
            {
                "name": "post_id",
                "type": "integer",
                "description": "Post ID."
            }
        ],
        "summary": "The \"like_count\" tool is an API designed to retrieve the number of likes for a specific post based on its unique post ID. It accepts a single input parameter, \"post_id,\" which is an integer representing the unique identifier of the post. By providing this post ID, the tool allows users to fetch and access the total number of likes received by the specified post, providing valuable engagement and popularity metrics for the given content."
    },
    {
        "tool_name": "user_posts",
        "tool_description": "API to retrieve the post IDs for a specific user.",
        "arguments": [
            {
                "name": "user_id",
                "type": "integer",
                "description": "User's ID."
            }
        ],
        "summary": "The \"user_posts\" tool is an API designed to retrieve post IDs associated with a specific user. It accepts a single input parameter, \"user_id,\" which is an integer representing the user's unique ID. By providing this user ID, the tool allows users to access a list of post IDs associated with that particular user, facilitating content retrieval and analysis for a specific user on a platform or system."
    },
    {
        "tool_name": "movie_recommendations",
        "tool_description": "The API for retrieving recommended movies based on user preferences and filtering watched movies.",
        "arguments": [
            {
                "name": "preferences",
                "type": "list",
                "description": "User's movie preferences."
            }
        ],
        "summary": "The \"movie_recommendations\" tool is an API designed to provide movie recommendations tailored to user preferences while filtering out previously watched movies. It takes a single input parameter, \"preferences,\" which is a list representing the user's movie preferences. Using this input, the tool offers personalized movie suggestions, ensuring that users receive recommendations aligned with their tastes and interests while excluding movies they have already watched."
    },
    {
        "tool_name": "clothing_recommendation",
        "tool_description": "API for providing clothing recommendations based on weather conditions.",
        "arguments": [
            {
                "name": "temperature",
                "type": "float",
                "description": "Temperature in Celsius."
            },
            {
                "name": "humidity",
                "type": "float",
                "description": "Relative humidity in percentage."
            },
            {
                "name": "weather_conditions",
                "type": "string",
                "description": "Description of weather conditions."
            }
        ],
        "summary": "The \"clothing_recommendation\" tool is an API designed to offer clothing recommendations based on current weather conditions. It accepts three input parameters: \"temperature\" (in Celsius), \"humidity\" (in percentage), and \"weather_conditions\" (a description of the weather conditions). Using these inputs, the tool provides tailored clothing suggestions, helping users make appropriate clothing choices according to the prevailing weather, temperature, and humidity."
    },
    {
        "tool_name": "works_list",
        "tool_description": "Returns a list of work items matching the request",
        "arguments": [
            {
                "name": "applies_to_part",
                "description": "Filters for work belonging to any of the provided parts",
                "type": "array of strings"
            },
            {
                "name": "created_by",
                "description": "Filters for work created by any of these users",
                "type": "array of strings"
            },
            {
                "name": "issue.priority",
                "description": "Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3",
                "type": "array of strings"
            },
            {
                "name": "issue.rev_orgs",
                "description": "Filters for issues with any of the provided Rev organizations",
                "type": "array of strings"
            },
            {
                "name": "imit",
                "description": "The maximum number of works to return. The default is '50'",
                "type": "Integer (int32)"
            },
            {
                "name": "owned_by",
                "description": "Filters for work owned by any of these users",
                "type": "array of strings"
            },
            {
                "name": "stage.name",
                "description": "Filters for records in the provided stage(s) by name",
                "type": "array of strings"
            },
            {
                "name": "ticket.needs_response",
                "description": "Filters for tickets that need a response",
                "type": "boolean"
            },
            {
                "name": "ticket.rev_org",
                "description": "Filters for tickets associated with any of the provided Rev organizations",
                "type": "array of strings"
            },
            {
                "name": "ticket.severity",
                "description": "Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium",
                "type": "array of strings"
            },
            {
                "name": "ticket.source_channel",
                "description": "Filters for tickets with any of the provided source channels",
                "type": "array of strings"
            },
            {
                "name": "type",
                "description": "Filters for work of the provided types. Allowed values: issue, ticket, task",
                "type": "array of strings"
            }
        ],
        "summary": "The \"works_list\" tool is a versatile resource that enables users to retrieve a customized list of work items from a system based on a wide range of filtering criteria. Users can filter work items by parts, creators, priorities, organizations, ownership, stages, ticket attributes, and types, making it a powerful tool for managing and organizing tasks, issues, and tickets. The tool offers flexibility and precision in searching for work items that meet specific requirements, facilitating effective project and task management."
    },
    {
        "tool_name": "summarize_objects",
        "tool_description": "Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail.",
        "arguments": [
            {
                "name": "objects",
                "description": "List of objects to summarize",
                "type": "array of objects"
            }
        ],
        "summary": "The \"summarize_objects\" tool is designed to generate summaries for a list of objects. The specific method or criteria for summarizing each object type is an internal implementation detail and may vary depending on the context. This tool accepts one input argument, \"objects,\" which is an array of objects that need to be summarized. It provides a means to extract concise and informative summaries for different types of objects, simplifying the process of understanding and working with complex data sets or collections of objects."
    },
    {
        "tool_name": "prioritize_objects",
        "tool_description": "Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail",
        "arguments": [
            {
                "name": "objects",
                "description": "A list of objects to be prioritized",
                "type": "array of objects"
            }
        ],
        "summary": "The \"prioritize_objects\" tool is designed to return a sorted list of objects based on their priority. The specific logic or criteria used to determine the priority of each object is an internal implementation detail and may vary. This tool takes a single input argument, \"objects,\" which is an array of objects that need to be prioritized. It provides a means to organize and rank objects based on their internal priority criteria, facilitating better decision-making and task management."
    },
    {
        "tool_name": "add_work_items_to_sprint",
        "tool_description": "Adds the given work items to the sprint",
        "arguments": [
            {
                "name": "work_ids",
                "description": "A list of work item IDs to be added to the sprint",
                "type": "array of strings"
            },
            {
                "name": "sprint_id",
                "description": "The ID of the sprint to which the work items should be added",
                "type": "str"
            }
        ],
        "summary": "The \"add_work_items_to_sprint\" tool is used to add specified work items to a particular sprint. It accepts two input arguments: \"work_ids,\" which is an array of work item IDs to be added to the sprint, and \"sprint_id,\" representing the ID of the sprint to which these work items should be added. This tool streamlines the process of managing and assigning work items to sprints, ensuring that they are appropriately associated with the correct sprint for development or project tracking purposes."
    },
    {
        "tool_name": "get_sprint_id",
        "tool_description": "Returns the ID of the current sprint",
        "arguments": [],
        "summary": "The \"get_sprint_id\" tool provides the functionality to retrieve the ID of the current sprint. It does not require any input arguments and is typically used to identify and access information related to the ongoing or active sprint in a project or development cycle."
    },
    {
        "tool_name": "get_similar_work_items",
        "tool_description": "Returns a list of work items that are similar to the given work item",
        "arguments": [
            {
                "name": "work_id",
                "description": "The ID of the work item for which you want to find similar items",
                "type": "string"
            }
        ],
        "summary": "The \"get_similar_work_items\" tool is designed to retrieve a list of work items that are similar to a specified work item. It takes a single input argument, which is the \"work_id,\" representing the ID of the work item for which you want to find similar items. This tool can be valuable for identifying related or similar tasks, issues, or work items within a project or system, facilitating efficient collaboration and task management."
    },
    {
        "tool_name": "search_object_by_name",
        "tool_description": "Given a search string, returns the id of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest.",
        "arguments": [
            {
                "name": "query",
                "description": "The search string, could be for example customer's name, part name, user name.",
                "type": "string"
            }
        ],
        "summary": "The \"search_object_by_name\" tool is designed to find a matching object in the system of record based on a provided search string and return its ID. If multiple matching objects are found, it returns the one with the highest confidence level. The tool accepts a single input argument, which is the \"query,\" representing the search string. This tool is useful for quickly and accurately identifying specific objects or records within a system based on a given name or identifier."
    },
    {
        "tool_name": "who_am_i",
        "tool_description": "Returns the ID of the current user",
        "arguments": [],
        "summary": "The \"who_am_i\" tool serves the purpose of retrieving the ID of the current user. It does not require any input arguments and is used to identify and provide information about the user interacting with the system or application."
    },
    {
        "tool_name": "create_work_item",
        "tool_description": "Creates a new work item, such as a task, issue, or enhancement, and adds it to the project.",
        "arguments": [
            {
                "name": "work_item_type",
                "description": "The type of work item to create (e.g., task, issue, enhancement)",
                "type": "string"
            },
            {
                "name": "title",
                "description": "The title or name of the work item",
                "type": "string"
            },
            {
                "name": "description",
                "description": "A detailed description of the work item",
                "type": "string"
            },
            {
                "name": "assignee",
                "description": "The team member to whom the work item is assigned",
                "type": "string"
            },
            {
                "name": "priority",
                "description": "Specifies the priority level of the work item",
                "type": "string"
            },
            {
                "name": "due_date",
                "description": "Sets a due date for the work item",
                "type": "string"
            },
            {
                "name": "tags",
                "description": "Allows adding tags or labels for categorization",
                "type": "array of strings"
            }
        ],
        "summary": "The \"create_work_item\" tool is designed to streamline the process of creating new work items, such as tasks, issues, or enhancements, and adding them to a project. It accepts input parameters including the type of work item to be created (e.g., task, issue, enhancement), the title or name of the work item, a detailed description, the team member to whom the work item is assigned, the specified priority level, a due date if applicable, and the ability to add tags or labels for categorization. This tool simplifies the task of work item creation and management within a project, allowing for efficient tracking and organization of tasks, issues, and enhancements."
    },
    {
        "tool_name": "update_work_item_status",
        "tool_description": "Updates the status of a work item to reflect its progress in the development lifecycle.",
        "arguments": [
            {
                "name": "work_item_id",
                "description": "The ID of the work item to update",
                "type": "string"
            },
            {
                "name": "new_status",
                "description": "The new status to assign to the work item (e.g., In Progress, Done)",
                "type": "string"
            },
            {
                "name": "new_assignee",
                "description": "Specifies a new assignee for the work item",
                "type": "string"
            },
            {
                "name": "estimated_effort",
                "description": "Indicates the estimated effort required to complete the work item (Story points)",
                "type": "integer"
            },
            {
                "name": "dependencies",
                "description": "Lists any dependencies or related work items",
                "type": "array of strings"
            }
        ],
        "summary": "The \"update_work_item_status\" tool is designed to facilitate the management of work items by updating their status to reflect their progress within the development lifecycle. It accepts input parameters such as the work item ID that needs to be updated, the new status to assign to the work item (e.g., In Progress, Done), specification of a new assignee if applicable, the estimated effort required to complete the work item (in Story points), and a list of any dependencies or related work items. This tool streamlines the tracking and management of work items, allowing for real-time updates on their status and associated details."
    },
    {
        "tool_name": "code_review_feedback",
        "tool_description": "Provides feedback and comments on code reviews, highlighting areas for improvement.",
        "arguments": [
            {
                "name": "review_id",
                "description": "The ID of the code review to provide feedback on",
                "type": "string"
            },
            {
                "name": "feedback",
                "description": "Detailed feedback and comments for the code review",
                "type": "string"
            },
            {
                "name": "code_version",
                "description": "Identifies the specific version of the code under review",
                "type": "string"
            },
            {
                "name": "severity",
                "description": "Assigns a severity level to the feedback (e.g., critical, major, minor)",
                "type": "string"
            }
        ],
        "summary": "The \"code_review_feedback\" tool serves as a valuable resource for providing feedback and comments during code reviews, with a focus on highlighting areas for improvement. It requires input parameters such as the review ID for which feedback is provided, detailed comments and feedback for the code review, identification of the specific version of the code under review, and the assignment of a severity level to the feedback (e.g., critical, major, minor). This tool aids in enhancing code quality and collaboration among development teams by offering constructive feedback and suggestions during the review process."
    },
    {
        "tool_name": "test_execution_report",
        "tool_description": "Generates a report summarizing test case execution results, including pass/fail status and issues found.",
        "arguments": [
            {
                "name": "test_suite_id",
                "description": "The ID of the test suite for which to generate the execution report",
                "type": "string"
            },
            {
                "name": "test_environment",
                "description": "Specifies the testing environment used for the test cases",
                "type": "string"
            },
            {
                "name": "pass_fail_status",
                "description": "Indicates whether each test case passed or failed",
                "type": "list"
            },
            {
                "name": "test_case_types",
                "description": "Specifies the type of test cases included in the report",
                "type": "list"
            }
        ],
        "summary": "The \"test_execution_report\" tool is designed to generate a comprehensive report summarizing the results of test case execution. It takes several input parameters, including the test suite ID for which the execution report is generated, the testing environment used, a list indicating whether each test case passed or failed, and a list specifying the types of test cases included in the report. This tool is invaluable in quality assurance and testing processes, offering a clear overview of test execution outcomes, pass/fail status, and identification of any issues encountered during testing."
    },
    {
        "tool_name": "create_project",
        "tool_description": "Creates a new project and sets up the initial project configuration.",
        "arguments": [
            {
                "name": "project_name",
                "description": "The name or title of the new project",
                "type": "string"
            },
            {
                "name": "project_description",
                "description": "A brief description of the project's objectives and scope",
                "type": "string"
            },
            {
                "name": "project_lead",
                "description": "The team member who will lead the project",
                "type": "string"
            },
            {
                "name": "start_date",
                "description": "Sets a start date for the project",
                "type": "date"
            },
            {
                "name": "project_team",
                "description": "Lists the initial team members involved in the project",
                "type": "array of strings"
            },
            {
                "name": "target_date",
                "description": "Sets a target date for project completion",
                "type": "date"
            }
        ],
        "summary": "The \"create_project\" tool serves the purpose of creating a new project and establishing its initial configuration. It requires input parameters including the project name, a brief description of the project's objectives and scope, the team member designated as the project lead, a start date for the project, the list of initial team members involved, and a target date for project completion. This tool simplifies the process of project initiation, ensuring that projects are set up with the necessary details and team members, streamlining project management and tracking from the outset."
    },
    {
        "tool_name": "create_sprint",
        "tool_description": "Creates a new sprint within a project and defines its duration and goals.",
        "arguments": [
            {
                "name": "project_id",
                "description": "The ID of the project in which to create the sprint",
                "type": "string"
            },
            {
                "name": "sprint_name",
                "description": "The name or title of the new sprint",
                "type": "string"
            },
            {
                "name": "sprint_duration",
                "description": "The duration of the sprint in weeks",
                "type": "integer"
            },
            {
                "name": "sprint_goals",
                "description": "Defines specific goals and objectives for the sprint (e.g., deliverables)",
                "type": "string"
            },
            {
                "name": "sprint_capacity",
                "description": "Sets the maximum capacity or workload for the sprint(Story Points)",
                "type": "integer"
            },
            {
                "name": "backlog_items",
                "description": "Specifies the backlog items to be included in the sprint",
                "type": "array of strings"
            }
        ],
        "summary": "The \"create_sprint\" tool allows users to create a new sprint within a project, providing essential details such as the project ID, sprint name, duration in weeks, specific goals and objectives for the sprint, maximum capacity or workload (in Story Points), and the backlog items to be included in the sprint. This tool is instrumental in project management, enabling teams to efficiently plan and organize their work by defining sprint parameters and objectives."
    },
    {
        "tool_name": "assign_work_item",
        "tool_description": "Assigns a work item to a specific team member or group.",
        "arguments": [
            {
                "name": "work_item_id",
                "description": "The ID of the work item to be assigned",
                "type": "string"
            },
            {
                "name": "assignee",
                "description": "The team member or group to whom the work item is assigned",
                "type": "string"
            },
            {
                "name": "due_date",
                "description": "Sets a due date for the assigned work item",
                "type": "string"
            },
            {
                "name": "work_item_type",
                "description": "Indicates the type of work item being assigned",
                "type": "string"
            }
        ],
        "summary": "The \"assign_work_item\" tool facilitates the assignment of work items to specific team members or groups. It takes as input the ID of the work item to be assigned, designates the assignee (team member or group), sets a due date for the assigned task, and specifies the type of work item being assigned. This tool simplifies the process of distributing and managing work within a team or organization, ensuring tasks are allocated efficiently and tracked effectively."
    },
    {
        "tool_name": "create_actionable_tasks_from_text",
        "tool_description": "Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item.",
        "arguments": [
            {
                "name": "text",
                "description": "The text from which the actionable insights need to be created.",
                "type": "string"
            }
        ],
        "summary": "The \"create_actionable_tasks_from_text\" tool extracts actionable insights from a given text and generates tasks based on these insights, essentially creating work items. This tool takes a text input and identifies key points that can be turned into actionable tasks, making it a valuable resource for turning textual information into actionable work items."
    },
    {
        "tool_name": "automate_workflow",
        "tool_description": "Automates repetitive workflow tasks by defining triggers and actions.",
        "arguments": [
            {
                "name": "trigger_event",
                "description": "The event or condition that triggers the workflow",
                "type": "string"
            },
            {
                "name": "workflow_actions",
                "description": "The actions to be executed when the trigger event occurs",
                "type": "array of objects"
            },
            {
                "name": "notifications",
                "description": "Specifies who should receive notifications when the workflow is triggered",
                "type": "array of strings"
            },
            {
                "name": "actions_log",
                "description": "Keeps a log of actions performed by the workflow for auditing",
                "type": "boolean"
            }
        ],
        "summary": "The \"automate_workflow\" tool automates repetitive workflow tasks by defining triggers and actions. Users can specify a trigger event that initiates the workflow, define a set of workflow actions to be executed when the trigger event occurs, determine who should receive notifications when the workflow is triggered, and choose whether to maintain an actions log for auditing purposes. This tool streamlines and simplifies the execution of repetitive tasks within various workflows, enhancing efficiency and automation."
    },
    {
        "tool_name": "modify_scene",
        "tool_description": "This API modifies a scene of smart home system, given the scene name and a list of smart devices",
        "arguments": [
            {
                "name": "name",
                "type": "string",
                "description": "The name of the scene."
            },
            {
                "name": "devices",
                "type": "list",
                "description": "The list of smart devices"
            }
        ],
        "summary": "The \"modify_scene\" API allows users to modify a scene in a smart home system by providing the scene name and a list of smart devices. Users can update the configuration of the scene by specifying the new list of smart devices associated with it. This API provides flexibility in customizing and adjusting smart home scenes to meet users' preferences and needs."
    },
    {
        "tool_name": "flight_search",
        "tool_description": "API to retrieve flight options based on the destination and travel dates.",
        "arguments": [
            {
                "name": "source",
                "type": "string",
                "description": "Source for the flight."
            },
            {
                "name": "destination",
                "type": "string",
                "description": "Destination for the flight."
            },
            {
                "name": "travel_dates",
                "type": "string",
                "description": "Travel dates. Format: %Y-%m-%d"
            }
        ],
        "summary": "The \"flight_search\" API allows users to retrieve flight options based on the source, destination, and travel dates. It requires three arguments: the source of the flight, the destination for the flight, and the travel dates in the format %Y-%m-%d. This API assists users in finding available flight options for their travel plans."
    },
    {
        "tool_name": "personal_info_update",
        "tool_description": "The API for updating a user's personal information and address.",
        "arguments": [
            {
                "name": "username",
                "type": "string",
                "description": "Name of the user."
            },
            {
                "name": "password",
                "type": "string",
                "description": "Password of the user."
            },
            {
                "name": "address",
                "type": "string",
                "description": "Updated address information."
            }
        ],
        "summary": "The \"personal_info_update\" API allows users to update their personal information and address. It requires three arguments: the username of the user for identification, the user's password for authentication, and the updated address information that the user wants to set. This API enables users to keep their personal information up-to-date in the system."
    },
    {
        "tool_name": "modify_password",
        "tool_description": "The API for modifying the password of the account.",
        "arguments": [
            {
                "name": "token",
                "type": "string",
                "description": "The token of the user."
            },
            {
                "name": "old_password",
                "type": "string",
                "description": "The old password of the user."
            },
            {
                "name": "new_password",
                "type": "string",
                "description": "The new password of the user."
            }
        ],
        "summary": "The \"modify_password\" API provides functionality for users to modify the password of their account. It accepts three arguments: the user's token for authentication, the old password (current password) for verification, and the new password that the user wants to set. This API allows users to update their account passwords securely, ensuring that only authorized users can make changes to their account credentials."
    }
]